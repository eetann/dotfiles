set-option -g default-shell /usr/bin/zsh
set -g prefix C-j
set -s escape-time 0
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides "xterm-256color"

# key bind--------------------------------------------------------
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"
# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# -nをつけるとprefixキーを押さなくて良い
bind -n M-p previous-window
bind -n M-n next-window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# show------------------------------------------------------------
# カレントディレクトリにウインドウ名を修正
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# ウィンドウとペインの番号を1から開始する
set-option -g base-index 1
set-window-option -g pane-base-index 1
# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on
set -g status-justify "left"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "colour236"
set -g status-left-length "100"
set -g pane-active-border-fg "colour148"
set -g status-bg "colour233"
set -g message-command-fg "colour247"
set -g pane-border-fg "colour236"
set -g message-bg "colour236"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "colour247"
setw -g window-status-fg "colour231"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour233"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour148"
setw -g window-status-separator ""
setw -g window-status-bg "colour233"
set -g status-left "#[fg=colour22,bg=colour148] #S #[fg=colour148,bg=colour233,nobold,nounderscore,noitalics] #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[fg=colour236,bg=colour233,nobold,nounderscore,noitalics] #[fg=colour247,bg=colour236] #[fg=yellow]⚡#(battery.exe -t -e)#[fg=colour148,bg=colour236,nobold,nounderscore,noitalics] #[fg=colour22,bg=colour148] %m/%d(%a) %H:%M"
setw -g window-status-format "#[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]#[default] #W #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour233,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] #W #[fg=colour236,bg=colour233,nobold,nounderscore,noitalics]"

# マウス操作の有効化
set-option -g mouse on
tmux_commands_with_legacy_scroll="vim nvim nano less more man"
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Up Up Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Down Down Down" "send -Mt="'

# copy and paste
setw -g mode-keys vi
# WSL でコピー時、マウスドラッグ時にクリップボードにもコピー
if-shell "uname -a | grep Microsoft" '\
	bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"; \
	bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip.exe"; \
	bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"\
'

# plugins---------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
run '~/.tmux/plugins/tpm/tpm'
