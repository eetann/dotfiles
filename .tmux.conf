set-option -g prefix C-s
set-option -g default-terminal "tmux-256color" # 基本的にはscreen-256colorかtmux-256colorを設定
set-option -ga terminal-overrides ",$TERM:Tc" # tmuxを起動していない時のzshでの$TERMの値を指定
set-option -ga terminal-features ',*:overline'
set-option -g history-limit 5000
set-option -g status-interval 60
set-option -g allow-passthrough on
set-option -g repeat-time 5000

# key bind--------------------------------------------------------
bind-key -N "再読み込み" r {
  source-file ~/.tmux.conf ; \
  display-message "Reload Config!!"
}
# | でペインを縦に分割する
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# - でペインを横に分割する
bind-key - split-window -v -c '#{pane_current_path}'

# Vimのキーバインドでペインを移動する
bind-key h if-shell -F '#{pane_at_left}' '' 'select-pane -L'
bind-key j if-shell -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key k if-shell -F '#{pane_at_top}' '' 'select-pane -U'
bind-key l if-shell -F '#{pane_at_right}' '' 'select-pane -R'

# -n prefixキーを押さなくて良い
bind-key -n M-p previous-window
bind-key -n M-n next-window

# ウィンドウの入れ替え
bind-key -n M-h swap-window -t -1 \; previous-window
bind-key -n M-l swap-window -t +1 \; next-window

# Vimのキーバインドでペインをリサイズする
# -r repeat-timeで指定したミリ秒間prefixを押さずに連続入力できる
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

# ペインをkillしてカレントディレクトリ維持しつつ再起動
bind-key Q respawn-pane -k -c '#{pane_current_path}'
bind-key q confirm-before -p "respawn-pane? (y/others)" "respawn-pane -k -c '#{pane_current_path}'"

bind-key g display-popup -w 95% -h 90% -E \
  -d '#{pane_current_path}' \
  'lazygit --use-config-dir=$HOME/.config/lazygit'

bind-key -n M-q run-shell 'tmux split-window -v -l 15 \
  -c "#{pane_current_path}" \
  "bun run ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id};\
  tmux select-pane -t #{pane_id}"'

bind-key -n M-o run-shell 'tmux display-popup -E \
  -d "#{pane_current_path}" \
  -w 80% -h 65% \
  "bun run ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id}"'
# bind-key -n M-o display-popup -E \
#   -d '#{pane_current_path}' \
#   'bun run ~/ghq/github.com/eetann/editprompt/dist/index.js'

# show------------------------------------------------------------
# #(shell command) コマンド出力の最初の行
# #[attribute] 色や属性
# #S セッション名
# #W カレントウィンドウの名前
# カレントディレクトリにウインドウ名を修正
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on
set-option -g status "on"
# set-option @bg "#181818"
# set-option @content "#2C2D32"
# set-option @primary "#FC621C"
# set-option @secondary "#FF8F00"
# set-option @accent "#11DAFE"
set-option @bg "#232d34"
set-option @content "#FCFCFC"
set-option @primary "#50819f"
set-option @secondary "#2c3c46"
set-option @accent "#5a6766"
# set-option @bg "#162530"
# set-option @content "#FCFCFC"
# set-option @primary "#02adca"
# set-option @secondary "#27404f"
# set-option @accent "#00cac3"
set-option -g status-style "bg=#{@bg}"
# 月〜金の10:00〜19:00まではWORK、それ以外はCHILL
set-option -g status-left '#( \
  hour=$(date +%H); \
  dow=$(date +%u); \
  bg="#{@bg}"; \
  text_fg="#{@content}"; \
  if [ $dow -ge 1 ] && [ $dow -le 5 ] && [ $hour -ge 10 ] && [ $hour -lt 19 ]; then \
    label="WORK"; \
    color="#{@primary}"; \
  else \
    label="CHILL"; \
    color="#{@accent}"; \
  fi; \
  echo "#[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color] "; \
)'
set-option -g status-right '#( \
  label="%m/%d(%a) %H:%M"; \
  color="#{@accent}"; \
  bg="#{@bg}"; \
  text_fg="#{@content}"; \
  echo " #[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color]"; \
)'

set-window-option -g window-status-separator ""
# `sleep 2; printf "\a"`でベル確認できる
set-window-option -g window-status-format '#( \
  bg="#{@bg}"; \
  label=" #W "; \
  color="#{@secondary}"; \
  text_fg="#{@content}"; \
  if [ "#{window_bell_flag}" = "1" ]; then \
    label=" 󱅫 #W "; \
    color="#{@content}"; \
    text_fg="#{@primary}"; \
  fi; \
  echo "#[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color]"; \
)'

set-option -g message-style "bg=#{@accent},fg=#{@content}"
# set-option -g message-command-style "bg=#{@base},fg=#{@primary}"
set -g pane-border-style fg=colour236
set -g pane-active-border-style fg=colour6
# set-window-option -g window-active-style bg=colour236

# マウス操作の有効化
set-option -g mouse on

# copy and paste
set-option -gw mode-keys vi
set-option -s set-clipboard on
# コピーモードでマウス範囲選択の時にすぐコピーされてしまうのを解除
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi DoubleClick1Pane { select-pane ; send-keys -X select-word }

unbind-key [
bind-key [ { copy-mode ; display-message "Copy mode!" }

# unbind-key ]
# bind-key "]" { copy-mode ; display-message "Copy mode!" }
bind-key v { copy-mode ; display-message "Copy mode!" }
bind-key V { copy-mode ; display-message "Copy mode!" }
bind-key C-v { copy-mode ; display-message "Copy mode!" }

bind-key -T copy-mode-vi v { send-keys -X begin-selection }
bind-key -T copy-mode-vi C-v { send-keys -X rectangle-toggle }
bind-key -T copy-mode-vi V { send-keys -X select-line }
bind-key -T copy-mode-vi y { send-keys -X copy-pipe }

# 現在のosc133.zshの設定だと`-o`を外すと動かない
bind-key -N "cmode: 前のプロンプトへ移動" -T copy-mode-vi [ {
  send-keys -X previous-prompt -o ;
  send-keys k
}
bind-key -N "cmode: 次のプロンプトへ移動" -T copy-mode-vi ] {
  send-keys -X next-prompt -o ;
  send-keys j
}

unbind-key -T prefix ]
if-shell "which xsel" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(xsel -bo)"; \
    tmux paste-buffer -p \
  '
}
if-shell "which pbpaste" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(pbpaste)"; \
    tmux paste-buffer -p \
  '
}

# plugins---------------------------------------------------------
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

set-option -g @continuum-restore 'on'
# resurrect-saveのデフォルトである prefix + C-s を解除
unbind-key -T prefix C-s
set-option -g @resurrect-save 'M-s'
run '~/.tmux/plugins/tpm/tpm'
