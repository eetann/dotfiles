set-option -g prefix C-s
set-option -g default-terminal "tmux-256color" # 基本的にはscreen-256colorかtmux-256colorを設定
set-option -ga terminal-overrides ",$TERM:Tc" # tmuxを起動していない時のzshでの$TERMの値を指定
set-option -g history-limit 5000
set-option -g status-interval 60
set-option -g allow-passthrough on
set-option -g repeat-time 5000

# key bind--------------------------------------------------------
bind-key -N "再読み込み" r {
  source-file ~/.tmux.conf ; \
  display-message "Reload Config!!"
}
# | でペインを縦に分割する
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# - でペインを横に分割する
bind-key - split-window -v -c '#{pane_current_path}'

# Vimのキーバインドでペインを移動する
bind-key h if-shell -F '#{pane_at_left}' '' 'select-pane -L'
bind-key j if-shell -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key k if-shell -F '#{pane_at_top}' '' 'select-pane -U'
bind-key l if-shell -F '#{pane_at_right}' '' 'select-pane -R'

# -n prefixキーを押さなくて良い
bind-key -n M-p previous-window
bind-key -n M-n next-window

# ウィンドウの入れ替え
bind-key -n M-h swap-window -t -1 \; previous-window
bind-key -n M-l swap-window -t +1 \; next-window

# Vimのキーバインドでペインをリサイズする
# -r repeat-timeで指定したミリ秒間prefixを押さずに連続入力できる
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

# ペインをkillしてカレントディレクトリ維持しつつ再起動
bind-key Q respawn-pane -k -c '#{pane_current_path}'
bind-key q confirm-before -p "respawn-pane? (y/others)" "respawn-pane -k -c '#{pane_current_path}'"

bind-key g display-popup -w 95% -h 90% -E \
  -d '#{pane_current_path}' \
  'lazygit --use-config-dir=$HOME/.config/lazygit'

bind-key -n M-q run-shell 'tmux split-window -v -l 15 \
  -c "#{pane_current_path}" \
  "bun run ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id};\
  tmux select-pane -t #{pane_id}"'

bind-key -n M-o run-shell 'tmux display-popup -E \
  -d "#{pane_current_path}" \
  -w 80% -h 65% \
  "bun run ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id}"'
# bind-key -n M-o display-popup -E \
#   -d '#{pane_current_path}' \
#   'bun run ~/ghq/github.com/eetann/editprompt/dist/index.js'

# show------------------------------------------------------------
# #(shell command) コマンド出力の最初の行
# #[attribute] 色や属性
# #S セッション名
# #W カレントウィンドウの名前
# カレントディレクトリにウインドウ名を修正
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on
set-option -g status "on"
set-option -g status-justify "left"
set-option -g status-style bg=colour233,"none"
set-option -g status-left-length "100"
set-option -g status-left-style "none"
set-option -g status-right-style "none"
set-option -g status-right-length "100"
set-option -g message-style bg=colour236,fg=colour247
set-option -g message-command-style bg=colour236,fg=colour247
set -g pane-border-style fg=colour236
set -g pane-active-border-style fg=colour6
# set-window-option -g window-active-style bg=colour236
# set-window-option -g window-style bg=colour237
set-window-option -g window-status-style bg=colour233,"none",fg=colour231
set-window-option -g window-status-activity-style bg=colour233,"none",fg=colour148
set-window-option -g window-status-separator "|"
set-option -g window-status-format \
"#[default] #W #[fg=colour233,bg=colour233,nobold,nounderscore,noitalics]"
set-window-option -g window-status-current-format \
"#[fg=colour254,bg=colour236] #W \
#[fg=colour236,bg=colour233,nobold,nounderscore,noitalics]"
set-option -g status-left ""
set-option -g status-right \
"#[fg=colour22,bg=colour148] %m/%d(%a) %H:%M"

# マウス操作の有効化
set-option -g mouse on

# copy and paste
set-option -gw mode-keys vi
set-option -s set-clipboard on
# コピーモードでマウス範囲選択の時にすぐコピーされてしまうのを解除
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi DoubleClick1Pane { select-pane ; send-keys -X select-word }

unbind-key [
bind-key [ { copy-mode ; display-message "Copy mode!" }

# unbind-key ]
# bind-key "]" { copy-mode ; display-message "Copy mode!" }
bind-key v { copy-mode ; display-message "Copy mode!" }
bind-key V { copy-mode ; display-message "Copy mode!" }
bind-key C-v { copy-mode ; display-message "Copy mode!" }

bind-key -T copy-mode-vi v { send-keys -X begin-selection }
bind-key -T copy-mode-vi C-v { send-keys -X rectangle-toggle }
bind-key -T copy-mode-vi V { send-keys -X select-line }
bind-key -T copy-mode-vi y { send-keys -X copy-pipe }

# 現在のosc133.zshの設定だと`-o`を外すと動かない
bind-key -N "cmode: 前のプロンプトへ移動" -T copy-mode-vi [ {
  send-keys -X previous-prompt -o ;
  send-keys k
}
bind-key -N "cmode: 次のプロンプトへ移動" -T copy-mode-vi ] {
  send-keys -X next-prompt -o ;
  send-keys j
}

unbind-key -T prefix ]
if-shell "which xsel" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(xsel -bo)"; \
    tmux paste-buffer -p \
  '
}
if-shell "which pbpaste" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(pbpaste)"; \
    tmux paste-buffer -p \
  '
}

# plugins---------------------------------------------------------
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

set-option -g @continuum-restore 'on'
# resurrect-saveのデフォルトである prefix + C-s を解除
unbind-key -T prefix C-s
set-option -g @resurrect-save 'M-s'
run '~/.tmux/plugins/tpm/tpm'
