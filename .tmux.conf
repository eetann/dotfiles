set-option -g prefix C-s
set-option -g default-terminal "tmux-256color" # 256色対応
set-option -gu terminal-features
set-option -sa terminal-features ',*:overline' # 上線を有効化
set-option -sa terminal-features ",*:RGB"
set-option -g allow-passthrough on
set-option -g history-limit 5000
set-option -g repeat-time 5000

# key bind--------------------------------------------------------
bind-key -N "再読み込み" r {
  source-file ~/.tmux.conf ; \
  display-message "Reload Config!!"
}
# | でペインを縦に分割する
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# - でペインを横に分割する
bind-key - split-window -v -c '#{pane_current_path}'

# Vimのキーバインドでペインを移動する
bind-key h if-shell -F '#{pane_at_left}' '' 'select-pane -L'
bind-key j if-shell -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key k if-shell -F '#{pane_at_top}' '' 'select-pane -U'
bind-key l if-shell -F '#{pane_at_right}' '' 'select-pane -R'

bind-key f display-panes
set-option -g display-panes-time 90000

# -n prefixキーを押さなくて良い
bind-key -n M-p previous-window
bind-key -n M-n next-window

# ウィンドウの入れ替え
bind-key -n M-h swap-window -t -1 \; previous-window
bind-key -n M-l swap-window -t +1 \; next-window

# Vimのキーバインドでペインをリサイズする
# -r repeat-timeで指定したミリ秒間prefixを押さずに連続入力できる
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

bind-key -N "一時的にペインズーム" -n M-z resize-pane -Z

# ペインをkillしてカレントディレクトリ維持しつつ再起動
bind-key -N "ペインを再起動" Q respawn-pane -k -c '#{pane_current_path}'
bind-key -N "ペインを再起動" q confirm-before -p "respawn-pane? (y/others)" "respawn-pane -k -c '#{pane_current_path}'"

bind-key g display-popup -w 95% -h 90% -E \
  -d '#{pane_current_path}' \
  'lazygit --use-config-dir=$HOME/.config/lazygit'

bind-key -n M-q run-shell 'tmux split-window -v -l 10 \
  -c "#{pane_current_path}" \
  "node ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id} --always-copy"'
  # "editprompt --editor nvim --target-pane #{pane_id} --always-copy"'

bind-key -n M-o run-shell 'tmux display-popup -E \
  -d "#{pane_current_path}" \
  -w 80% -h 65% \
  "node ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --target-pane #{pane_id} --always-copy"'
# プロンプト関係ない一時的なメモ用
bind-key -n M-t run-shell 'tmux split-window -v -l 10 \
  -c "#{pane_current_path}" \
  "node ~/ghq/github.com/eetann/editprompt/dist/index.js --editor nvim --always-copy"'

# show------------------------------------------------------------
# #(shell command) コマンド出力の最初の行
# #[attribute] 色や属性
# #S セッション名
# #W カレントウィンドウの名前
# カレントディレクトリにウインドウ名を修正
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on
set-option -g status "on"
set-option -g status-interval 60
# base: https://daisyui.com/docs/themes/
# https://daisyui.com/theme-generator/#theme=eJyVlPFugyAQxl-FmCzZkkoABXVvQ_VczawYsFm7Ze--ExtrizXZn3f3-77jDsJP1OkjRO-R3l-ci3ZRaVpjY1cewKcrbT8xG8dTfq8dxJwxrJjPtjy8CvZCGGU5Eax4ewTFAuRyA0yW4JZjaboBumGGiwnOFMkYVUW2FPS2OWp7ubFiZIWSCeFCrpCBu2TPFA6QrZbueUJFdj1MSkSR02RVEDRJt4W6LO9pRAkLiXA1eUB2cBqsbmckebLqK_evbTddbWYwS0eQKyISQZXij2DgLArvrFCB--DyztqdcEJ8nLO7h_HMhEtOM85X4LCDmjpIFAlaJOlS9KVt13Qft8tMae4nKJQgGCixQoc3uakCa42dWSUnMpc4MRUhGQ6QrSmsrpqTw-fVQjl4f2HhuCzVDbQV5nFj8qG0N2dfmPOu-Yal11Lja2tme2MrGGnen32ign44jLGPOtO48SdhGFVQ61OLM9W6dbCLegs1WOc_mSn3-wcK-0x_
# oklch -> RGB: https://oklch.com
set-option -g @c-base-100 "#001C23"
set-option -g @c-base-200 "#001015"
set-option -g @c-base-300 "#000509"
set-option -g @c-base-content "#FFD6A7"
set-option -g @c-primary "#BEFF00"
set-option -g @c-primary-content "#507000"
set-option -g @c-secondary "#CEBEF4"
set-option -g @c-secondary-content "#564775"
set-option -g @c-accent "#505050"
set-option -g @c-accent-content "#F8F8F8"
set-option -g @c-neutral "#003741"
set-option -g @c-neutral-content "#FFD6A7"
set-option -g @c-info "#00BAFE"
set-option -g @c-info-content "#042E49"
set-option -g @c-success "#01DF72"
set-option -g @c-success-content "#022D14"
set-option -g @c-warning "#FFC000"
set-option -g @c-warning-content "#714E00"
set-option -g @c-error "#F04E4F"
set-option -g @c-error-content "#550001"
set-option -g status-style "bg=#{@c-base-100}"
# 月〜金の10:00〜19:00まではWORK、それ以外はCHILL
set-option -g status-left '#( \
  hour=$(date +%H); \
  dow=$(date +%u); \
  bg="#{@c-base-100}"; \
  color="#{@c-info}"; \
  text_fg="#{@c-info-content}"; \
  if [ $dow -ge 1 ] && [ $dow -le 5 ] && [ $hour -ge 10 ] && [ $hour -lt 19 ]; then \
    label="WORK"; \
  else \
    label="CHILL"; \
  fi; \
  echo "#[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color]  "; \
)'
set-option -g status-right '#( \
  label="%m/%d(%a) %H:%M"; \
  bg="#{@c-base-100}"; \
  color="#{@c-info}"; \
  text_fg="#{@c-info-content}"; \
  echo " #[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color]"; \
)'

set-option -gw window-status-separator ""
# `sleep 2; printf "\a"`でベル確認できる
set-option -gw window-status-format '#( \
  label=" #W "; \
  bg="#{@c-base-100}"; \
  color="#{@c-neutral}"; \
  text_fg="#{@c-neutral-content}"; \
  if [ "#{window_bell_flag}" = "1" ]; then \
    label=" 󱅫 #W "; \
    color="#{@c-info}"; \
    text_fg="#{@c-info-content}"; \
  fi; \
  echo "#[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg]$label#[bg=$bg,fg=$color]"; \
)'
# window-status-format で表示するため、デフォルトのreverseさせない
set-option -gw window-status-bell-style "bold"
set-option -gw window-status-current-format '#( \
  label=" #W "; \
  bg="#{@c-base-100}"; \
  color="#{@c-primary}"; \
  text_fg="#{@c-primary-content}"; \
  echo "#[bg=$bg,fg=$color]#[bg=$color,fg=$text_fg,bold]$label#[bg=$bg,fg=$color,nobold]"; \
)'

# メッセージ
set-option -g message-style "bg=#{@c-info},fg=#{@c-info-content},bold"
# status-keysがviで、insertモード以外のとき
set-option -g message-command-style "bg=#{@c-accent},fg=#{@c-accent-content}"

# ボーダー
set-option -g pane-border-style "fg=#{@c-base-content}"
set-option -g pane-active-border-style "fg=#{@c-primary}"
set-option -g pane-border-indicators both

# コピーモードの右上など
set-option -g mode-style "bg=#{@c-warning},fg=#{@c-warning-content},bold"

# マウス操作の有効化
set-option -g mouse on

# copy and paste
set-option -gw mode-keys vi
set-option -s set-clipboard on
# コピーモードでマウス範囲選択の時にすぐコピーされてしまうのを解除
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi DoubleClick1Pane { select-pane ; send-keys -X select-word }

unbind-key [
bind-key [ { copy-mode ; display-message "Copy mode!" }

unbind-key ]
bind-key ] { copy-mode ; display-message "Copy mode!" }
bind-key v { copy-mode ; display-message "Copy mode!" }
bind-key V { copy-mode ; display-message "Copy mode!" }
bind-key C-v { copy-mode ; display-message "Copy mode!" }

bind-key -T copy-mode-vi v { send-keys -X begin-selection }
bind-key -T copy-mode-vi C-v { send-keys -X rectangle-toggle }
bind-key -T copy-mode-vi V { send-keys -X select-line }
bind-key -T copy-mode-vi y { send-keys -X copy-pipe }
bind-key -N "cmode: 選択範囲を言語指定してbatで表示" -T copy-mode-vi C {
  command-prompt -p 'language:' \
    -I "md" \
    "send-keys -X copy-pipe-no-clear '\
      tmux load-buffer -; \
      tmux display-popup  -w 95% -h 90% -E \
        \"tmux show-buffer | bat --paging=always -l=%%\"
        '
    "
}

# 現在のosc133.zshの設定だと`-o`を外すと動かない
bind-key -N "cmode: 前のプロンプトへ移動" -T copy-mode-vi [ {
  send-keys -X previous-prompt -o ;
  send-keys k
}
bind-key -N "cmode: 次のプロンプトへ移動" -T copy-mode-vi ] {
  send-keys -X next-prompt -o ;
  send-keys j
}

if-shell "which xsel" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(xsel -bo)"; \
    tmux paste-buffer -p \
  '
}
if-shell "which pbpaste" {
  bind-key -N "ペースト" p run-shell ' \
    tmux set-buffer -- "$(pbpaste)"; \
    tmux paste-buffer -p \
  '
}

# plugins---------------------------------------------------------
setenv -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
    ~/.tmux/plugins/tpm/bin/install_plugins'"
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

set-option -g @continuum-restore 'on'
# resurrect-saveのデフォルトである prefix + C-s を解除
unbind-key -T prefix C-s
set-option -g @resurrect-save 'M-s'
run '~/.tmux/plugins/tpm/tpm'
