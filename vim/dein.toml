# プラグインの管理
[[plugins]] # これ使うのに必要
repo = 'Shougo/dein.vim'

[[plugins]] # 非同期実行(openbrowserに必要)
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # プレビューをブラウザで開く
repo = 'tyru/open-browser.vim'
hook_add = '''
	autocmd vimrc BufNewFile,BufRead *.html,*.py nnoremap <buffer><Leader>p
		\ :execute "OpenBrowser http://localhost:8000/" . expand('%')<CR>
	autocmd vimrc BufNewFile,BufRead *.html,*.py nnoremap <buffer><Leader>cp
		\ :term ++rows=5 cmd.exe /c python server.py
	let g:netrw_nogx = 1 " disable netrw's gx mapping.
	nmap gx <Plug>(openbrowser-smart-search)
	vmap gx <Plug>(openbrowser-smart-search)
	function! My_opens()
		execute 'OpenBrowser ' . substitute(expand('%:p'), '\v/mnt/(.)', '\1:/', 'c')
	endfunction
'''

[[plugins]] # コメントアウトに便利
repo = 'tyru/caw.vim'
hook_add = '''
	let g:caw_dollarpos_sp_left=' '
	nmap gct <Plug>(caw:jump:comment-prev)TODO:<Space>
	nmap gcO <Plug>(caw:jump:comment-prev)
	nnoremap gcl :vimgrep /TODO:/j %<CR>
'''

[[plugins]] # ヤンク時に一瞬ハイライト
repo = "machakann/vim-highlightedyank"
hook_add = '''
    let g:highlightedyank_highlight_duration = 300
'''

# textobjct-------------------------------------------------------
[[plugins]] # テキストオブジェクトの追加のため
repo = 'kana/vim-textobj-user'

# [[plugins]] # l 改行文字を含まずに行を扱う
# repo = 'kana/vim-textobj-line'
# depends = 'vim-textobj-user'

[[plugins]] # uでURLをtextobj
repo = 'mattn/vim-textobj-url'
depends = 'vim-textobj-user'

[[plugins]] # bかsbで近いペアをtextobj
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
hook_add = '''
	omap ab <Plug>(textobj-multiblock-a)
	omap ib <Plug>(textobj-multiblock-i)
	xmap ab <Plug>(textobj-multiblock-a)
	xmap ib <Plug>(textobj-multiblock-i)
'''

[[plugins]] # 引数や配列の入れ替え
repo = 'machakann/vim-swap'
hook_add = '''
    omap i, <Plug>(swap-textobject-i)
    xmap i, <Plug>(swap-textobject-i)
    omap a, <Plug>(swap-textobject-a)
    xmap a, <Plug>(swap-textobject-a)
'''

[[plugins]] # dでデリミタ(_,#,-や大文字間)をtextobj
repo = 'machakann/vim-textobj-delimited'
depends = 'vim-textobj-user'
hook_add = """
	let g:textobj_delimited_patterns =[
	\ ['\m/', '\m\%(/[-.[:alnum:]_~]\+\)\+'],
	\ ['\m\\', '\m\a:\%(\\[^\\/?:*"<>|]\+\)\+\ze\%(''[^a-z]\|$\)'],
	\ ['\m\.', '\m\<\%(\.\k\+\|\k\+\.\)\%(\k*\.\?\)*\>', 10],
	\ ['\m#', '\m\<\%(#\k\+\|\k\+#\)\%(\k*#\?\)*\>', 10],
	\ ['\m_', '\m\<\%(_\k\+\|\k\+_\)\%(\k*_\?\)*\>', 10],
	\ ['\m-', '\m\<\%(-\k\+\|\k\+-\)\%(\k*-\?\)*\>', 10],
	\ ['\m\C[^A-Z]\zs\ze[A-Z]', '\m\C\<[A-Z]\?\k\+[A-Z]\%(\k*[A-Z]\?\)*\>', 10]]
"""

[[plugins]] # 選択範囲の拡大
repo = 'terryma/vim-expand-region'
hook_add = """
    vmap v <Plug>(expand_region_expand)
    vmap <C-v> <Plug>(expand_region_shrink)
    let g:expand_region_text_objects = {
    \ 'id' :1,
    \ 'ib' :1,
    \ 'iB' :1,
    \ 'ip' :0,
    \ }
"""

[[plugins]] # 括弧関連便利になる
repo = 'machakann/vim-sandwich'

[[plugins]] # 括弧などを入力したときの挙動をスマートに補完
repo = 'jiangmiao/auto-pairs'

[[plugins]] # カラースキーム
repo = 'morhetz/gruvbox'
hook_add = '''
	set background=dark
	autocmd vimrc VimEnter * nested colorscheme gruvbox
'''

[[plugins]] # インデントの深さを可視化(要tabstop&shiftwidth設定)
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
	let g:indent_guides_enable_on_vim_startup = 1
	let g:indent_guides_auto_colors = 0
    hi IndentGuidesOdd  ctermbg=black
    hi IndentGuidesEven ctermbg=darkgrey
'''

[[plugins]] # nvim系に必要
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"

[[plugins]] # nvim系に必要
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

[[plugins]]
repo = 'ryanoasis/vim-devicons'

# スニペット定義ファイル
[[plugins]] 
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]] # tagジャンプ
repo = 'majutsushi/tagbar'
hook_add = '''
	let g:tagbar_width = 30
	let g:tagbar_sort = 0
	let g:tagbar_map_togglesort = 'S'
	let g:can_auto_opens_defx_tagbar = 1
	nnoremap <silent> <leader>tt :TagbarToggle<CR>
	let g:tagbar_type_markdown = {
		\ 'ctagstype': 'markdown',
		\ 'ctagsbin' : $HOME . '/.vim/dein/repos/github.com/jszakmeister/markdown2ctags/markdown2ctags.py',
		\ 'ctagsargs' : '-f - --sort=yes',
		\ 'kinds' : [
		\ 's:sections',
		\ 'i:images'
		\ ],
		\ 'sro' : '|',
		\ 'kind2scope' : {
		\ 's' : 'section',
		\ },
		\ 'sort': 0,
		\ }
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]] # ステータスラインとバッファ表示の強化
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes','tagbar','vim-devicons']
hook_add = '''
	" ステータスラインの表示内容強化
	set laststatus=2 " ステータスラインを常に表示
	set noshowmode   " 現在のモードを日本語表示しない
	set showcmd      " 打ったコマンドをステータスラインの下に表示
	set ruler        " ステータスラインの右側にカーソルの現在位置を表示する
	let g:airline_theme = 'powerlineish'
	let g:airline_powerline_fonts = 1
	let g:airline#extensions#branch#enabled = 1
	let g:airline#extensions#tagbar#enabled = 1
	let g:airline#extensions#wordcount#enabled = 0
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#formatter = 'unique_tail'
	let g:airline_left_sep =''
	let g:airline_left_alt_sep=''
	let g:airline_right_sep =''
	let g:airline_right_alt_sep=''
	let g:airline#extensions#default#layout = [
    \ [ 'a', 'b', 'c' ],
    \ [ 'x', 'y', 'z', 'warning' , 'error']]
    let g:airline#extensions#default#section_truncate_width = {
    \ 'b': 79,
    \ 'x': 60,
    \ 'y': 100,
    \ 'z': 45,
    \ 'warning': 80,
    \ 'error': 80,
    \ }
	let g:airline_section_z = '%3v:%l/%L %3p%%'
'''
