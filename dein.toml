# プラグインの管理
[[plugins]] # これ使うのに必要
repo = 'Shougo/dein.vim'

[[plugins]] # 非同期実行(vim-clang-formatに必要)
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # ファイルツリーの表示
repo = 'scrooloose/nerdtree'

[[plugins]] # コメントアウトに便利
repo = 'scrooloose/nerdcommenter'
hook_add ='''
    let g:NERDSpaceDelims = 1
    let g:NERDDefaultAlign='left'
    let g:NERDCreateDefaultMappings = 0
    nmap <Leader>c<Space> <Plug>NERDCommenterToggle
    vmap <Leader>c<Space> <Plug>NERDCommenterToggle
    nmap <Leader>cA <Plug>NERDCommenterAppend
    " TODOコメント追加
    nmap <Leader>ctd <Plug>NERDCommenterAppendTODO:<Space>
    " TODOをlocation listとして開く
	nnoremap <Leader>tl :vimgrep /TODO:/j %<CR>:cwindow<CR>
	" TODO: 他のアノテーションも追加
'''

[[plugins]] # markdown用のctags
repo = 'jszakmeister/markdown2ctags'

[[plugins]] # tagジャンプ
repo = 'majutsushi/tagbar'
depends = ['markdown2ctags']
hook_add = '''
	let g:tagbar_autofocus = 1
	let g:tagbar_width = 30
	nnoremap <silent> <leader>t :TagbarToggle<CR>
	let g:tagbar_type_markdown = {
		\ 'ctagstype': 'markdown',
		\ 'ctagsbin' : $HOME . '/.vim/dein/repos/github.com/jszakmeister/markdown2ctags/markdown2ctags.py',
		\ 'ctagsargs' : '-f - --sort=yes',
		\ 'kinds' : [
		\ 's:sections',
		\ 'i:images'
		\ ],
		\ 'sro' : '|',
		\ 'kind2scope' : {
		\ 's' : 'section',
		\ },
		\ 'sort': 0,
		\ }
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]] # ステータスラインとバッファ表示の強化
repo = 'vim-airline/vim-airline'
hook_add = '''
	" ステータスラインの表示内容強化
	set laststatus=2 " ステータスラインを常に表示
	set noshowmode   " 現在のモードを日本語表示しない
	set showcmd      " 打ったコマンドをステータスラインの下に表示
	set ruler        " ステータスラインの右側にカーソルの現在位置を表示する
	" カーソルキーでbuffer移動
	nnoremap <C-p> :bp<CR>
	nnoremap <C-n> :bn<CR>
	let g:airline_theme = 'powerlineish'
	let g:airline_powerline_fonts = 1
	let g:airline#extensions#tagbar#enabled = 1
	let g:airline#extensions#branch#enabled = 1
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#wordcount#enabled = 0
	let g:airline#extensions#tabline#formatter = 'unique_tail'
	let g:airline#extensions#ale#error_symbol = ' '
	let g:airline#extensions#ale#warning_symbol = ' '
	let g:airline#extensions#default#layout = [
    \ [ 'a', 'b', 'c' ],
    \ [ 'x', 'y', 'z', 'warning' , 'error']]
    let g:airline#extensions#default#section_truncate_width = {
    \ 'b': 79,
    \ 'x': 60,
    \ 'y': 100,
    \ 'z': 45,
    \ 'warning': 80,
    \ 'error': 80,
    \ }
	let g:airline_section_z = '%3v:%l/%L %3p%%'
'''
depends = ['vim-airline-themes','tagbar']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]] # 構文チェック
repo = 'w0rp/ale'
hook_add ='''
	let g:ale_echo_msg_error_str = nr2char(0xf421)
	let g:ale_echo_msg_warning_str = nr2char(0xf420)
	let g:ale_echo_msg_info_str = nr2char(0xf05a)
	let g:ale_sign_error = g:ale_echo_msg_error_str
	let g:ale_sign_warning = g:ale_echo_msg_warning_str
	let g:ale_statusline_format = [
	\ g:ale_echo_msg_error_str . ' %d',
	\ g:ale_echo_msg_warning_str . ' %d',
	\ nr2char(0xf4a1) . '  ']
	let g:ale_fix_on_save = 1
	let g:ale_sign_column_always = 1
	let g:ale_lint_on_text_changed = 0
	let g:ale_lint_on_insert_leave = 1
	let b:ale_linters = {
	\	'c':['clang'],
	\	'cpp':['clang'],
	\	'python': ['flake8'],
	\	'vim': ['vint'],
	\}
	let g:ale_fixers = {
	\   'c': ['clang-format'],
	\   'cpp': ['clang-format'],
	\   'python': ['black','isort'],
	\}
	let g:ale_c_clangformat = '-style="{
	\   AlignConsecutiveAssignments:true,
	\   AlignConsecutiveDeclarations:true,
	\   IndentCaseLabels":true,
	\   IndentWidth:4,
	\   KeepEmptyLinesAtTheStartOfBlocks:true,
	\   SpacesBeforeTrailingComments:1,
	\   TabWidth":4,
	\   UseTab:ForIndentation	
	\}"'
	let g:ale_cpp_clangformat = '-style="{
	\   AlignConsecutiveAssignments:true,
	\   AlignConsecutiveDeclarations:true,
	\   IndentCaseLabels":true,
	\   IndentWidth:4,
	\   KeepEmptyLinesAtTheStartOfBlocks:true,
	\   SpacesBeforeTrailingComments:1,
	\   TabWidth":4,
	\   UseTab:ForIndentation	
	\}"'
'''

[[plugins]] # gitをvimで操作
repo = 'tpope/vim-fugitive'

[[plugins]] # カラースキーム
repo = 'morhetz/gruvbox'
hook_add = '''
	set background=dark
	autocmd vimrc VimEnter * nested colorscheme gruvbox
'''

[[plugins]] # 画面の移動が便利になる
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
    " デフォルトのキーマッピングを無効に
    let g:EasyMotion_do_mapping = 0
    " f + 2文字 で画面全体を検索してジャンプ
    nmap f <plug>(easymotion-overwin-f2)
    " 検索時、大文字小文字を区別しない
    let g:EasyMotion_smartcase = 1
'''

[[plugins]] # ドットコマンド対象を拡張
on_event = 'InsertEnter'
repo = 'tpope/vim-repeat'

[[plugins]] # マーク位置の表示
repo = 'kshenoy/vim-signature'

[[plugins]] # NERDTreeにGitの情報を表示
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]] # インデントの深さを可視化(要tabstop&shiftwidth設定)
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
	let g:indent_guides_enable_on_vim_startup = 1
	let g:indent_guides_auto_colors = 0
	autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=darkgrey
	autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=lightgrey
'''

[[plugins]] # nvim系に必要
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"

[[plugins]] # nvim系に必要
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

# ----lsp補完----
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
# on_event = 'VimEnter'
hook_add = '''
	let g:LanguageClient_serverCommands = {
		\ 'c': ['clangd-6.0'],
		\ 'cpp': ['clangd-6.0'],
		\ 'objc': ['clangd-6.0'],
		\ 'objcpp': ['clangd-6.0'],
		\ 'python': ['pyls'],
		\ }
	let g:LanguageClient_autoStart = 1
	let g:LanguageClient_diagnosticsEnable = 0
	let g:LanguageClient_hasSnippetSupport = 0
	set completefunc=LanguageClient#complete
	let g:deoplete#file#enable_buffer_path = 1
	nnoremap <Leader>ld :call LanguageClient_textDocument_definition()<CR>
	nnoremap <Leader>lr :call LanguageClient_textDocument_rename()<CR>
'''

