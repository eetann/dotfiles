return {
  "hedyhli/outline.nvim",
  cmd = { "Outline" },
  keys = {
    { "<space>o", "<Cmd>Outline<CR>" },
  },
  opts = {
    providers = {
      markdown = {
        filetypes = { "markdown", "mdx" },
      },
    },
    symbols = {
      icons = {
        File = { icon = "Û∞àî", hl = "Identifier" },
        Module = { icon = "Û∞Üß", hl = "Include" },
        Namespace = { icon = "Û∞Ö™", hl = "Include" },
        Package = { icon = "Û∞èó", hl = "Include" },
        Class = { icon = "C", hl = "Type" },
        Method = { icon = "∆í", hl = "Function" },
        Property = { icon = "Óò§", hl = "Identifier" },
        Field = { icon = "Û∞Ü®", hl = "Identifier" },
        Constructor = { icon = "Óàè", hl = "Special" },
        Enum = { icon = "‚Ñ∞", hl = "Type" },
        Interface = { icon = "Û∞ú∞", hl = "Type" },
        Function = { icon = "ÔÇö", hl = "Function" },
        Variable = { icon = "Óûõ", hl = "Constant" },
        Constant = { icon = "Óà¨", hl = "Constant" },
        String = { icon = "Aa", hl = "String" },
        Number = { icon = "#", hl = "Number" },
        Boolean = { icon = "‚ä®", hl = "Boolean" },
        Array = { icon = "Û∞Ö™", hl = "Constant" },
        Object = { icon = "‚¶ø", hl = "Type" },
        Key = { icon = "üîê", hl = "Type" },
        Null = { icon = "NULL", hl = "Type" },
        EnumMember = { icon = "ÔÖù", hl = "Identifier" },
        Struct = { icon = "{}", hl = "Structure" },
        Event = { icon = "E", hl = "Type" },
        Operator = { icon = "+", hl = "Identifier" },
        TypeParameter = { icon = "T", hl = "Identifier" },
        Component = { icon = "Û∞Ö¥", hl = "Function" },
        Fragment = { icon = "Û∞Ö¥", hl = "Constant" },
        TypeAlias = { icon = "Óùû ", hl = "Type" },
        Parameter = { icon = "Ó™í ", hl = "Identifier" },
        StaticMethod = { icon = "Ó™å ", hl = "Function" },
        Macro = { icon = "ÔÑ∂ ", hl = "Function" },
      },
    },
  },
}
