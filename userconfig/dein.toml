# プラグインの管理
[[plugins]] # これ使うのに必要
repo = 'Shougo/dein.vim'

[[plugins]] # 非同期実行(vim-clang-formatに必要)
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # インタラクティブフィルター(ファイル検索に便利)
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]] # ファイルツリーの表示
repo = 'scrooloose/nerdtree'

[[plugins]] # コメントアウトに便利
repo = 'scrooloose/nerdcommenter'
hook_add ='''
	let g:NERDSpaceDelims=1 "コメントアウト時に1スペース挿入
	let g:NERDDefaultAlign='left'
'''

[[plugins]] # ステータスラインの表示内容強化
repo = 'itchyny/lightline.vim'

[[plugins]] # 構文チェック
repo = 'w0rp/ale'
hook_add ='''
	let g:ale_fix_on_save = 1
	let g:ale_sign_column_always = 1
	let g:ale_sign_error = 'x'
	let g:ale_sign_warning = '⚠'
	let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
	let g:ale_lint_on_text_changed = 0
	let g:ale_lint_on_insert_leave = 1
	let b:ale_linters = {
	\	'python': ['flake8'],
	\	'c':['clang'],
	\	'cpp':['clang'],
	\}
	let g:ale_fixers = {
	\   'c': ['clang-format'],
	\   'cpp': ['clang-format'],
	\   'python': ['black','isort'],
	\}
	let g:ale_cpp_clangformat = '-style="{
	\   AlignConsecutiveAssignments:true,
	\   AlignConsecutiveDeclarations:true,
	\   IndentCaseLabels":true,
	\   IndentWidth:4,
	\   KeepEmptyLinesAtTheStartOfBlocks:true,
	\   SpacesBeforeTrailingComments:1,
	\   TabWidth":4,
	\   UseTab:ForIndentation	
	\}"'
'''

[[plugins]] # lspでの補完
repo = 'prabirshrestha/async.vim'

[[plugins]] # lspでの補完
repo = 'prabirshrestha/vim-lsp'
hook_add='''
if executable('clangd-6.0')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd-6.0']},
        \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
        \ })
endif
if executable('pyls')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ })
endif
let g:lsp_diagnostics_enabled = 0 "w0rp/aleで対応するので無効化
'''

[[plugins]] # lspでの補完
repo='prabirshrestha/asyncomplete.vim'

[[plugins]] # lspでの補完
repo='prabirshrestha/asyncomplete-lsp.vim'


[[plugins]] # gitをvimで操作
repo = 'tpope/vim-fugitive'

[[plugins]] # カラースキーム
repo = 'morhetz/gruvbox'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme gruvbox
'''

[[plugins]] # 画面の移動が便利になる
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
    " デフォルトのキーマッピングを無効に
    let g:EasyMotion_do_mapping = 0
    " f + 2文字 で画面全体を検索してジャンプ
    nmap f <plug>(easymotion-overwin-f2)
    " 検索時、大文字小文字を区別しない
    let g:EasyMotion_smartcase = 1
'''

[[plugins]] # クオート関連便利になる
on_event = 'InsertEnter'
repo = 'tpope/vim-surround'


[[plugins]] # ドットコマンド対象を拡張
on_event = 'InsertEnter'
repo = 'tpope/vim-repeat'

[[plugins]] # マーク位置の表示
repo = 'kshenoy/vim-signature'

[[plugins]] # NERDTreeにGitの情報を表示
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]] # インデントの深さを可視化(要tabstop&shiftwidth設定)
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
	let g:indent_guides_enable_on_vim_startup = 1
	let g:indent_guides_auto_colors = 0
	autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=darkgrey
	autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=lightgrey
'''

#[[plugins]] # 
#repo = ''

#[[plugins]] # 
#repo = ''

#[[plugins]] # 
#repo = ''

#[[plugins]] # 
#repo = ''

#[[plugins]] # 
#repo = ''


